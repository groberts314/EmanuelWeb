<?php
  require_once('./app-code/helper-functions.php');
?>
<h2>Upcoming Events</h2>
<div class="upcoming-events-content">
  <?php /* BEGIN: TEMP - Coronavirus Social Distancing Notice for Large Viewports */ ?>
  <div class="visible-lg-block">
    <p class="notice" style="font-weight: bold">
      Emanuel is beginning to slowly allow events on camps again. Small groups
      are able to meet with safety measured in place, and we are beginning to
      hold outdoor worship. We are currently not meeting indoors with large
      groups.  We are working to follow local, state and national guideline
      regarding when it would be safe to gather again in large groups and
      indoors.
    </p>
    <p>
      Please <a href="./coronavirus-precautions">click here</a> for the list of
      online ways we are continuing our ministry during this time and for a letter
      from Pastor Cate Luehr.
    </p>
    <p>Check back here Sunday Morning for our Video Worship Service</p>
  </div>
  <?php /* END: TEMP - Coronavirus Social Distancing Notice for Large Viewports */ ?>
  <ul class="event-list">
  <?php
    $events = require_once('./app-data/upcoming-events.php');
    $now = new DateTime("now", new DateTimeZone('America/Los_Angeles'));
    $numEvents = 0;

    foreach ($events as $key => $event) {
      $eventDate = new DateTime($event['date']);

      // Calculate a "keep until" date
      // By default, most events should get kept until the end of day of their
      // date (i.e. they are "single day events").
      // Sometimes, we have a "multi-day" event like a weekend retreat, etc.
      // Allowing the data source to specify an optional "keep until" date
      // gives us the flexibility to keep such multi-day events on the calendar
      // as long as desired.
      $keepUntil = get($event['keepUntil']);
      $keepUntilDate = $keepUntil === NULL
        ? new DateTime($event['date'])
        : new DateTime($keepUntil);

      // Add one day so we retain events until end of day on the specified
      // "keep until" date
      $keepUntilDate->add(new DateInterval('P1D'));

      // Only render events where the "keep until" date is in the future
      if ($keepUntilDate > $now) {
        $month = $eventDate->format('M');
        $dayOfMonth = $eventDate->format('j');
        $dayOfWeek = $eventDate->format('l');
        $params = array(
          'month' => $month,
          'dayOfMonth' => $dayOfMonth,
          'dayOfWeek' => $dayOfWeek,
          'content' => $event['content']
        );

        display('./partials/upcoming-event-listing.phtml', $params);
        ++$numEvents;
      }
    }

    if ($numEvents == 0) {
      echo <<<HTML
      <p style="margin-top: 11px">
        There are no upcoming events on our calendar right now.  Check back with
        us soon for updates.
      </p>
HTML;
    }
  ?>
  </ul>
</div>
